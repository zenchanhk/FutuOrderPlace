<Window x:Class="FutuOrderPlace.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FutuOrderPlace"
        xmlns:controls="clr-namespace:FutuOrderPlace.UI.Controls"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        Icon="images\order.png"
        x:Name="mainWin"
        mc:Ignorable="d"
        Title="IB OrderPlace" Height="450" Width="1000">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UI/Resource.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5, 0, 0, 0">
        <Grid.LayoutTransform>
            <ScaleTransform 
	            CenterX="0" CenterY="0"
	            ScaleX="{Binding Path=ScalingFactor, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MainWindow}}}"
	            ScaleY="{Binding Path=ScalingFactor, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MainWindow}}}"
	        	/>
        </Grid.LayoutTransform>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.6*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Margin="0,5,0,5" Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
            <CheckBox Margin="0,0,5,0" Content="Header" IsChecked="{Binding header}" VerticalAlignment="Center" />
            <Button  Margin="0,0,5,0" Width="50" Content="Open" Click="OpenList" />
            <Button Margin="0,0,5,0" Width="50" Content="Save" Click="SaveList" />
            <Button Margin="0,0,5,0" Width="50" Content="Clear" Click="Clear" />
            <Button Margin="0,0,5,0" Width="50" Content="Setting" Click="Setting" />
            <ComboBox ItemsSource="{Binding TrdEnvs}" DisplayMemberPath="Desc"
                      SelectedValuePath="TrdEnv" SelectedValue="{Binding TrdEnv}"/>
        </StackPanel>
        <StackPanel Margin="0,5,0,5" Orientation="Horizontal" Grid.Column="0" Grid.Row="1">            
            <controls:FilteredComboBox ItemsSource="{Binding AllSymbols}"
                    SelectedItem="{Binding SelectedSymbol}"
                    Width="150"
                    SearchFields="Code:Name:PinYin"
                    IsEditable="True" 
                    IsTextSearchEnabled="False" 
                    StaysOpenOnEdit="True">

                <controls:FilteredComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel VirtualizationMode="Recycling" />
                    </ItemsPanelTemplate>
                </controls:FilteredComboBox.ItemsPanel>
                <controls:FilteredComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Code}" FontWeight="Bold"/>
                            <TextBlock Text="{Binding Name}"/>
                        </StackPanel>
                    </DataTemplate>
                </controls:FilteredComboBox.ItemTemplate>
            </controls:FilteredComboBox>

            <Button Margin="5, 0, 0, 0" Width="20" Content="+" Click="OnAddSymbol"/>
            <Button Margin="5, 0, 0, 0" Width="20" Content="-" Click="OnDeleteSymbol"/>
        </StackPanel>
        <DataGrid Margin="0,0,5,0" Grid.Column="0" Grid.Row="2" 
                  x:Name="watchListGrid"
                  ItemsSource="{Binding OrderList}"
                  AutoGenerateColumns="False"
                  EnableColumnVirtualization="True"
                
                EnableRowVirtualization="True"
                  CanUserAddRows="False"
                  CanUserResizeRows="False"
                  CanUserSortColumns="False">
            <!--:DataGridBehavior.DisplayRowNumber="True"-->
            <!--Bind the Content property of the RowHeaderStyle to the Converter to create numbered rows-->
            <DataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Content" Value="{Binding Converter={StaticResource IndexConverter}}" />
                </Style>
            </DataGrid.RowHeaderStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Contract.Security.Code}" Header="Code" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding Contract.Name}" Header="Symbol" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding Price, UpdateSourceTrigger=PropertyChanged}" Header="Price" ElementStyle="{StaticResource RightAligned}"/>
                <DataGridTextColumn Binding="{Binding Quantity, UpdateSourceTrigger=PropertyChanged}" Header="Quantity" ElementStyle="{StaticResource RightAligned}"/>
                <DataGridComboBoxColumn Header="TrdSide" 
                                        DisplayMemberPath="Desc"
                                        SelectedValuePath="TrdSide"
                                        SelectedValueBinding="{Binding TrdSide}">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Directions, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Directions, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridTemplateColumn Header="Time">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:DateTimeEditor Value="{Binding ScheduledTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Format="HH:mm:ss" HorizontalAlignment="Center" Width="60"
                                                     BorderThickness="0"
                                        IsEnabled="{Binding IsActivated, Converter={StaticResource BoolRevConverter}}"
                                        VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding OrderStatus, Converter={StaticResource OrderStatusToTextConverter}}" Header="Status" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding Countdown}" Header="Countdown" IsReadOnly="True" 
                                    ElementStyle="{StaticResource CenterAligned}"/>
                <DataGridTemplateColumn Header="Action">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Command="{Binding Path=DataContext.Commands.Activate, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    CommandParameter="{Binding Id}"                                        
                                    Content="{Binding IsActivated, Converter={StaticResource IsActivateToBtnContentConverter}}"
                                    Visibility="{Binding IsSent, Converter={StaticResource IsSentToVisRevConverter}}" 
                                    Padding="5, 0">
                                    <!--Button.IsEnabled>
                                        <MultiBinding Converter="{StaticResource TimeToEnableConverter}" ConverterParameter="cancel">
                                            <Binding Path="ScheduledTime"/>
                                            <Binding Path="IsActivated"/>
                                        </MultiBinding>
                                    </Button.IsEnabled-->
                                </Button>
                                <Button Command="{Binding Path=DataContext.Commands.ModifyOrder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    CommandParameter="{Binding Id}"  
                                        Visibility="{Binding IsSent, Converter={StaticResource IsSentToVisConverter}}"
                                    Content="Modify"
                                    Padding="5, 0">
                                </Button>
                                <Button Command="{Binding Path=DataContext.Commands.CancelOrder, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    CommandParameter="{Binding Id}"  
                                        Visibility="{Binding IsSent, Converter={StaticResource IsSentToVisConverter}}"
                                    Content="Cancel"
                                    Padding="5, 0">
                                </Button>                                
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <GridSplitter Grid.Row="2" Grid.Column="0" Background="LightGray" HorizontalAlignment="Right"   VerticalAlignment="Stretch" Width="3"  />
        <DataGrid Margin="0,0,5,0" Grid.Column="1" Grid.Row="2"
                  x:Name="output"
                  ItemsSource="{Binding MessageList}"
                  IsReadOnly="True"
                  CanUserAddRows="False"
                  CanUserResizeRows="False"
                  CanUserSortColumns="False"
                  AutoGenerateColumns="False"
                  local:DataGridBehavior.DisplayRowNumber="True">
            <DataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Margin" Value="0 0 0 10"></Setter>
                </Style>
            </DataGrid.RowHeaderStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Code}" Header="Code"/>
                <DataGridTextColumn Binding="{Binding Source}" Header="Source"/>
                <DataGridTextColumn Binding="{Binding Time, StringFormat=\{0:HH:mm:ss\}}" Header="Time"/>
                <DataGridTextColumn Binding="{Binding Text}" Header="Message" Width="200"/>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Margin="0,5,0,5" Orientation="Horizontal" 
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
            <TextBlock Text="{Binding Now, StringFormat=\{0:dd HH:mm:ss\}}" Background="Yellow" Foreground="Blue"
                       FontWeight="Bold" FontSize="16" Padding="5"
                       />
        </StackPanel>
        <StatusBar Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2">
            <StatusBarItem>
                <TextBlock Name="lblCursorPosition" Text="{Binding StatusMessage}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <ItemsControl ItemsSource="{Binding Controllers}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="Blue" Margin="1" CornerRadius="2">
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.ToolTip>
                                            <TextBlock Text="{Binding Path=ConnectionStatus, Converter={StaticResource StatusToTooltipConverter}}" />
                                        </StackPanel.ToolTip>
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Name="mi_connect" Header="{Binding Path=ConnectionStatus, Converter={StaticResource StatusToIconTextConverter} }"
                                                            Click="Mi_Connect_Click">
                                                    <MenuItem.Icon>
                                                        <Image Source="{Binding Path=ConnectionStatus, Converter={StaticResource StatusToIconImageConverter}}"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Name="mi_unlock" Header="{Binding Path=ConnectionStatus.IsLocked, Converter={StaticResource LockToIconTextConverter} }"
                                                            Command="{Binding DataContext.Commands.Unlock, Source={x:Reference Name=mainWin}}"
                                                          CommandParameter="{Binding Path=.}">
                                                    <MenuItem.Icon>
                                                        <controls:AutoGreyableImage Source="{Binding Path=ConnectionStatus.IsLocked, 
                                                            Converter={StaticResource LockToCommandIconConverter}}"
                                                                                    />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <fa:IconBlock Padding="4,4,2,4" 
                                                      Icon="{Binding Path=ConnectionStatus.IsLocked, Converter={StaticResource LockToShowIconConverter} }" 
                                                      Foreground="{Binding Path=ConnectionStatus.IsLocked, Converter={StaticResource LockToColorConverter} }"
                                                      Background="{Binding Path=ConnectionStatus, Converter={StaticResource StatusToBrushConverter} }"/>
                                        <TextBlock Background="{Binding Path=ConnectionStatus, Converter={StaticResource StatusToBrushConverter} }"
                                               Text="{Binding DisplayName}" Padding="2" />
                                    </StackPanel>                                    
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Separator/>

                    <StatusBarItem HorizontalAlignment="Right" Content="{Binding Source={StaticResource ticker},Path=Now,Mode=OneWay}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
